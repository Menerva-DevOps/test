name: Build for dev to GCP

on:
  push:
    branches: [ $default-branch ]
env:    
image: docker:19.03


jobs:
  build-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    environment: dev
    
    
    - name: Docker configuration
      run: |-
        echo ${{steps.auth.outputs.access_token}} | docker login -u oauth2accesstoken --password-stdin https://$GAR_LOCATION-docker.pkg.dev
    # Get the GKE credentials so we can deploy to the cluster
    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v0
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        
# Build the Docker image
    - name: Build
      run: |-
       # configuring ssh connection
         'which ssh-agent || ( apk update && apk add --no-cache openssh && apk add openssh-client git)'
         mkdir -p ~/.ssh
         echo "$NPCI_DEV_SERVER_KEY" | tr -d '\r' > ~/.ssh/id_rsa
         chmod 700 ~/.ssh/id_rsa
         eval "$(ssh-agent -s)"
         ssh-add ~/.ssh/id_rsa
         ssh-keyscan -H 'gitlab.com' >> ~/.ssh/known_hosts
         apk update && apk add --no-cache python3 py-pip
         #Changing configuration file for development environments
         #need to add this when the backend is setup
         mv $DEV_NPCI_FRONTEND_CONF src/environments/environment.prod.ts
         #Build and Push docker image
         docker build -t frontend:$CI_COMMIT_SHA .
         docker save --output fn_image.tar frontend:$CI_COMMIT_SHA
         echo "$CI_COMMIT_SHA" > fn_tag
         scp -o "StrictHostKeyChecking no" fn_image.tar ubuntu@$NPCI_DEV_SERVER:~
         scp -o "StrictHostKeyChecking no" deploy_frontend.sh ubuntu@$NPCI_DEV_SERVER:~
         scp -o "StrictHostKeyChecking no" fn_tag ubuntu@$NPCI_DEV_SERVER:~
         ssh -o "StrictHostKeyChecking no" ubuntu@$NPCI_DEV_SERVER 'chmod +x deploy_frontend.sh; ./deploy_frontend.sh'     

